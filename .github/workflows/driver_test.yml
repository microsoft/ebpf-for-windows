# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT

# This workflow depends on self-hosted runners. See the following document for details:
# https://github.com/microsoft/ebpf-for-windows/blob/master/docs/SelfHostedRunnerSetup.md
#
# For documentation on the syntax of this file, see
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: Kernel_Test

on: pull_request

jobs:
  test:
    strategy:
      matrix:
        configurations: [Debug, Release]
    runs-on: [windows, self-hosted, kernel_test]
    env:
      # Path to the solution file relative to the root of the project.
      SOLUTION_FILE_PATH: ebpf-for-windows.sln

      # Configuration type to build.
      # You can convert this to a build matrix if you need coverage of multiple configuration types.
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

      BUILD_PLATFORM: x64

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Create verifier project
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        cd external\ebpf-verifier
        if not exist build mkdir build
        cmake -B build

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat"
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} /p:Analysis='True' ${{env.SOLUTION_FILE_PATH}}

    - name: Install eBPF
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: |
        ../../scripts/install-ebpf.bat

    - name: Run Unit Tests
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: ./unit_tests.exe -s

    - name: Run Ebpf Client Tests
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: |
        $env:install=0
        .\ebpf_client.exe -s

    - name: Run Ebpf API Tests
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: |
        $env:install=0
        .\api_test.exe -s

    - name: Run Ebpf Sample Extension Tests
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: |
        $env:install=0
        .\sample_ext_app.exe -s

    - name: Run Performance Benchmark Tests
      if: ${{ env.BUILD_CONFIGURATION == 'Release' }}
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: ./ebpf_performance.exe

    - name: Uninstall eBPF
      working-directory: ${{ github.workspace }}
      run: ./scripts/uninstall-ebpf.bat
