# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT

# This workflow performs a CMake-based build of the project.

name: Reusable CMake Workflow

on:
  workflow_call:
    inputs:
      # Name associated with the output of this build.
      build_artifact:
        required: true
        type: string

permissions:
  contents: read

jobs:
  build:
    timeout-minutes: 60

    strategy:
      matrix:
        configurations: [Debug, Release]

    runs-on: windows-2022

    env:
      BUILD_ARTIFACT_NAME: ${{inputs.build_artifact}}
      BUILD_CONFIGURATION: ${{matrix.configurations}}
      BUILD_PLATFORM: x64
      CMAKE_GENERATOR: Visual Studio 17 2022
      PLATFORM_TOOLSET: v143

    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@12aca0a884f6137d619d6a8a09fcc3406ced5281 # v5.3.0
      with:
        cancel_others: 'false'
        paths_ignore: '["**.md", "**/docs/**"]'

    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      if: steps.skip_check.outputs.should_skip != 'true'
      with:
        submodules: 'recursive'

    - name: Install tools
      if: steps.skip_check.outputs.should_skip != 'true'
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        choco install -y llvm --version 11.0.1 --allow-downgrade
        echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Cache nuget packages
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
      if: steps.skip_check.outputs.should_skip != 'true'
      env:
        cache-name: cache-nuget-modules
      with:
        path: packages
        key: ${{ runner.os }}-${{env.BUILD_PLATFORM}}-${{env.BUILD_CONFIGURATION}}-${{env.BUILD_ARTIFACT_NAME}}-${{ hashFiles('**/packages.config') }}

    - name: Configure the project
      if: steps.skip_check.outputs.should_skip != 'true'
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        cmake -S . -B build -G "${{env.CMAKE_GENERATOR}}" -A ${{env.BUILD_PLATFORM}} -T ${{env.PLATFORM_TOOLSET}}

    - name: Build the project
      if: steps.skip_check.outputs.should_skip != 'true'
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        cmake --build build --config ${{env.BUILD_CONFIGURATION }}

    - name: Download demo repository
      if: steps.skip_check.outputs.should_skip != 'true'
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Invoke-WebRequest https://github.com/microsoft/ebpf-for-windows-demo/releases/download/v0.0.1/${{env.BUILD_PLATFORM}}-${{env.BUILD_CONFIGURATION}}-cilium-xdp.zip -OutFile x64-${{env.BUILD_CONFIGURATION}}-cilium-xdp.zip

    - name: Extract artifacts to build path
      if: steps.skip_check.outputs.should_skip != 'true'
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd ${{github.workspace}}/build/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
        tar -xf ..\..\..\x64-${{ matrix.configurations }}-cilium-xdp.zip

    - name: Upload Build Output
      if: steps.skip_check.outputs.should_skip != 'true'
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
      with:
        name: ${{inputs.build_artifact}} ${{matrix.configurations}}
        path: ${{github.workspace}}/build/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
        retention-days: 5
