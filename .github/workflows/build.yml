# For documentation on the github environment, see
# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
#
# For documentation on the syntax of this file, see
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: MSBuild

on: pull_request

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        configurations: [Debug, Release]
    runs-on: windows-2019
    env:
      # Path to the solution file relative to the root of the project.
      SOLUTION_FILE_PATH: ebpf-for-windows.sln

      # Configuration type to build.
      # You can convert this to a build matrix if you need coverage of multiple configuration types.
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

      BUILD_PLATFORM: x64

    steps:
    - uses: actions/checkout@629c2de402a417ea7690ca6ce3f33229e27606a5
      with:
        submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@becb80cf9a036187bb1e07e74eb64e25850d757a

    - name: Install ProcDump64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        curl -fsSL -o Procdump.zip https://download.sysinternals.com/files/Procdump.zip
        7z x Procdump.zip -y -o"C:/Program Files/ProcDump"
        echo "C:\Program Files\ProcDump" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        mkdir c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
        echo "test" > c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/test.txt

    - name: Set AeDebug registry key
      working-directory: c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: |
        procdump64.exe -accepteula -i -r -ma c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}

    - name: Install LLVM and Clang
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        curl -fsSL -o LLVM10.exe https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/LLVM-10.0.0-win64.exe
        7z x LLVM10.exe -y -o"C:/Program Files/LLVM"
        echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Create verifier project
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cmake -G "Visual Studio 16 2019" -S external\ebpf-verifier -B external\ebpf-verifier\build

    - name: Create catch2 project
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cmake -G "Visual Studio 16 2019" -S external\catch2 -B external\catch2\build -DBUILD_TESTING=OFF

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} /p:Analysis='True' ${{env.SOLUTION_FILE_PATH}}

    - name: Upload Build Output
      uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
      with:
        name: Build x64 ${{ matrix.configurations }}
        path: ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
        retention-days: 5

    - name: Run Unit Tests
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: ./unit_tests.exe -s

    - name: Run RPC Client Tests
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: ./ebpf_client.exe -s

    - name: Check for crash dumps
      working-directory: c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: if (Test-Path *.dmp) { exit 1 }

    - name: Upload any crash dumps
      uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
      if: failure()
      with:
        name: Crash-Dumps-${{env.BUILD_PLATFORM}}-${{env.BUILD_CONFIGURATION}}
        path: c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
        retention-days: 5
