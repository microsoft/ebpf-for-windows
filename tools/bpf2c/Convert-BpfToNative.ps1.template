# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT

param([parameter(Mandatory = $true)] [string] $ProgramName,
    [parameter(Mandatory = $false)] [string] $Type,
    [parameter(Mandatory = $false)] [string] $IncludeDir = "$PSScriptRoot\..\include",
    [parameter(Mandatory = $false)] [string] $BinDir = "$PSScriptRoot",
    [parameter(Mandatory = $false)] [string] $OutDir = "$PWD",
    [parameter(Mandatory = $false)] [string] $Platform = "x64",
    [ValidateSet("Release", "Debug")][parameter(Mandatory = $false)] [string] $Configuration = "Release",
    [parameter(Mandatory = $false)] [bool] $SkipVerification = $false,
    [parameter(Mandatory = $false)] [bool] $KernelMode = $true)

Push-Location $OutDir

$KernelModeProject = '___KERNEL_MODE_VCXPROJ___'
$UserModeProject = '___USER_MODE_VCXPROJ___'

# If program name ends with .o, remove the suffix
if ($ProgramName.EndsWith(".o")) {
    $ProgramName = $ProgramName.Substring(0, $ProgramName.Length - 2)
}

# SkipVerification is only supported for Debug.
if ($Configuration -eq "Release" -and $SkipVerification) {
    throw "Invalid parameter. SkipVerification is only supported for Debug builds"
}

if ($null -eq (Get-Command 'msbuild.exe' -ErrorAction SilentlyContinue)) {
    throw "Unable to locate msbuild.exe. This command needs to run within a 'Developer Command Prompt'"
}

$fileExists = Test-Path -Path ("$ProgramName.o")
if (!$fileExists) {
    $errorString = "Can't find program file: " + "$ProgramName.o"
    throw $errorString
}


if ($KernelMode) {
    $ProjectFile = "$ProgramName.vcxproj"
    Set-Content -Path $ProjectFile -Value $KernelModeProject
}
else {
    $ProjectFile = "$ProgramName_um.vcxproj"
    Set-Content -Path $ProjectFile -Value $UserModeProject
}

$AdditionalOptions = If ($SkipVerification) {"--no-verify"} Else {""}

if ($PSBoundParameters.ContainsKey("Type")) {
    $AdditionalOptions += " --type $Type"
}

msbuild /p:BinDir="$BinDir\" /p:OutDir="$PWD\" /p:IncludeDir="$IncludeDir" /p:Configuration="$Configuration" /p:Platform="$Platform" /p:ProgramName="$ProgramName" /p:AdditionalOptions="$AdditionalOptions" $ProjectFile

if ($LASTEXITCODE -ne 0) {
    throw "Build failed for $ProgramName.o"
}

Pop-Location
