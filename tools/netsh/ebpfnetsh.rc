// Microsoft Visual C++ generated resource script.
//
#include "resource.h"

#define APSTUDIO_READONLY_SYMBOLS
/////////////////////////////////////////////////////////////////////////////
//
// Generated from the TEXTINCLUDE 2 resource.
//
#include "winres.h"

/////////////////////////////////////////////////////////////////////////////
#undef APSTUDIO_READONLY_SYMBOLS

/////////////////////////////////////////////////////////////////////////////
// English (United States) resources

#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
#pragma code_page(1252)

#ifdef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// TEXTINCLUDE
//

1 TEXTINCLUDE
BEGIN
    "resource.h\0"
END

2 TEXTINCLUDE
BEGIN
    "#include ""winres.h""\r\n"
    "\0"
END

3 TEXTINCLUDE
BEGIN
    "\r\n"
    "\0"
END

#endif    // APSTUDIO_INVOKED


/////////////////////////////////////////////////////////////////////////////
//
// String Table
//

STRINGTABLE
BEGIN
    HLP_EBPF_ADD_PROGRAM    "Loads an eBPF program.\n"
    HLP_EBPF_ADD_PROGRAM_EX "\
\nUsage: %1!s! [filename=]<string>\
\n                   [[type=]<string>]\
\n                   [[pinpath=]<string>]\
\n                   [[interface=]<string>]\
\n                   [[pinned=]none|first|all]\
\n                   [[execution=]jit|interpret]\
\n                   [[compartment=]<integer>\
\n\
\nParameters:\
\n\
\n      Tag           Value\
\n      filename    - Filename or path to ELF file containing the\
\n                    program.\
\n      type        - A string used as if it were a section name, to\
\n                    determine the program type and expected attach\
\n                    type.\
\n      pinpath     - Optionally the name to pin the program to.\
\n      interface   - Optionally the friendly name or index of a\
\n                    network interface to which an XDP program should be attached.\
\n                    If the interface is not specified (or index is set to 0),\
\n                    the XDP program is attached to all network interfaces.\
\n                    The command fails if this parameter is specified for program types\
\n                    other than XDP.\
\n      compartment - Optionally the ID of a network compartment to which a program\
\n                    should be attached. The command fails if this parameter is\
\n                    specified for program types other than CGROUP_SOCK_ADDR.\
\n      pinned      - One of the following values:\
\n                     none: Load all programs without pinning any.\
\n                   first: Pin the first program in the file.\
\n                     all: Pin all programs in the file.\
\n      execution   - One of the following values:\
\n                     jit: Convert the program to machine code.\
\n                     interpret: Run the program as byte code.\
\n\
\nRemarks: Loads programs from a file and pins them if requested.\
\n"
    HLP_EBPF_DELETE_PROGRAM "Deletes an eBPF program.\n"
    HLP_EBPF_DELETE_PROGRAM_EX "\
\nUsage: %1!s! [id=]<integer>\
\n\
\nParameters:\
\n\
\n      Tag         Value\
\n      id        - ID of the program to delete.\
\n\
\nRemarks: If the program is pinned, this unpins the specified\
\n         program.  If an unpinned process was loaded by the same\
\n         netsh instance, via ""add program"", this releases the\
\n         reference held by netsh. If there are no other\
\n         references to the program, it will be unloaded.\
\n         Otherwise, the resulting message will display which\
\n         process still holds a reference.\
\n"
    HLP_EBPF_SET_PROGRAM    "Updates an eBPF program.\n"
    HLP_EBPF_SET_PROGRAM_EX "\
\nUsage: %1!s! [id=]<integer>\
\n                   [[attached=]<string>]\
\n                   [[pinpath=]<string>]\
\n                   [[interface=]<string>]\
\n\
\nParameters:\
\n\
\n      Tag         Value\
\n      id        - Program ID as shown via ""show programs"".\
\n      attached  - A string used as if it were a section name, to\
\n                  determine the attach type.  Use an empty string\
\n                  to detach it.\
\n      pinpath   - The name to pin the program to, or if not\
\n                  empty, unpin the program.\
\n      interface - Optionally the friendly name or index of a\
\n                  network interface to which an XDP program should be attached.\
\n                  If the interface is not specified (or index is set to 0),\
\n                  the XDP program is attached to all network interfaces.\
\n                  The command fails if this parameter is specified for program types\
\n                  other than XDP.\
\n\
\nRemarks: Pins, unpins, attaches, or detaches the specified\
\n         program which must already be loaded.\
\n"
    HLP_EBPF_SHOW_PROGRAMS  "Shows eBPF programs.\n"
    HLP_EBPF_SHOW_PROGRAMS_EX "\
\nUsage: %1!s! [[type=]<string>]\
\n                     [[attached=]any|yes|no]\
\n                     [[pinned=]any|yes|no]\
\n                     [[level=]normal|verbose]\
\n                     [[filename=]<string>\
\n                     [[section=]<string>]]\
\n                     [[id=]<integer>]]\
\n\
\nParameters:\
\n\
\n      Tag         Value\
\n      type      - A string used as if it were a section name, to\
\n                  determine the program type and expected attach\
\n                  type.  If not specified, the default is xdp.\
\n      pinned    - One of the following values:\
\n                   any: Show all programs, pinned or not.\
\n                        This is the default value.\
\n                   yes: Only show pinned programs.\
\n                   no: Only show unpinned programs.\
\n      level     - One of the following values:\
\n                   normal: Display one line per program.  This\
\n                           is the default when no filename is\
\n                           given.\
\n                   verbose: Display extra information on each\
\n                            program.  This is the default when a\
\n                            filename is given.\
\n      filename  - Filename or path to ELF file containing the\
\n                  program.\
\n      section   - Optionally the name of the section containing the\
\n                  program.  If not specified, the default is to use the\
\n                  first code section.\
\n      id        - ID of a program to show.\
\n\
\nRemarks: Shows all loaded programs, or those matching specified\
\n         criteria.\
\n"

    HLP_EBPF_SHOW_DISASSEMBLY "Shows disassembly of an eBPF program.\n"
    HLP_EBPF_SHOW_DISASSEMBLY_EX "\
\nUsage: %1!s! [filename=]<string> [[section=]<string>]\
\n\
\nParameters:\
\n\
\n      Tag         Value\
\n      filename  - Filename or path to ELF file.\
\n      section   - Optionally the name of the section containing the\
\n                  program.  If not specified, the default is to use the\
\n                  first code section.\
\n\
\nRemarks: Shows the disassembly of the specified eBPF program.\
\n"
    HLP_EBPF_SHOW_SECTIONS  "Shows sections of an eBPF file.\n"
    HLP_EBPF_SHOW_SECTIONS_EX "\
\nUsage: %1!s! [filename=]<string> [[section=]<string>]\
\n                     [[level=]normal|verbose]\
\n\
\nParameters:\
\n\
\n      Tag         Value\
\n      filename  - Filename or path to .o, .dll, or .sys file.\
\n      section   - Optionally the name of a section.\
\n      level     - One of the following values:\
\n                   normal: Display one line per section.  This\
\n                           is the default when no section name is\
\n                           given.\
\n                   verbose: Display statistics on each section.\
\n                            This is the default when a section\
\n                            name is given. Statistics are only\
\n                            shown for .o files, not .dll or .sys.\
\n\
\nRemarks: Lists the code sections in the specified eBPF file.\
\n"
    HLP_EBPF_SHOW_VERIFICATION
                            "Shows results of trying to verify an eBPF program.\n"
    HLP_EBPF_SHOW_VERIFICATION_EX "\
\nUsage: %1!s! [filename=]<string> [[section=]<string>]\
\n                     [[type=]<string>] [[level=]normal|verbose]\
\n\
\nParameters:\
\n\
\n      Tag         Value\
\n      filename  - Filename or path to ELF file.\
\n      section   - Optionally the name of the section containing the\
\n                  program.  If not specified, the default is to use the\
\n                  first code section.\
\n      type      - A string used as if it were a section name, to\
\n                  determine the program type and expected attach\
\n                  type.\
\n      level     - One of the following values:\
\n                   normal: Only display details of errors. This is the\
\n                           default.\
\n                   verbose: Display details on every instruction.\
\n\
\nRemarks: Shows the verifier results of the specified eBPF program.\
\n"

    HLP_EBPF_SHOW_MAPS  "Shows eBPF maps.\n"
    HLP_EBPF_SHOW_MAPS_EX "\
\nUsage: %1!s!\
\n\
\nRemarks: Shows all loaded maps.\
\n"

    HLP_EBPF_SHOW_LINKS  "Shows eBPF links.\n"
    HLP_EBPF_SHOW_LINKS_EX "\
\nUsage: %1!s!\
\n\
\nRemarks: Shows all loaded links.\
\n"

    HLP_EBPF_SHOW_PINS  "Shows paths used by pinned programs.\n"
    HLP_EBPF_SHOW_PINS_EX "\
\nUsage: %1!s!\
\n\
\nRemarks: Shows pinned program paths.\
\n"

    HLP_EBPF_SHOW_PROCESSES  "Shows processes using eBPF.\n"
    HLP_EBPF_SHOW_PROCESSES_EX "\
\nUsage: %1!s!\
\n\
\nRemarks: Shows processes using eBPF.\
\n"



END

#endif    // English (United States) resources
/////////////////////////////////////////////////////////////////////////////



#ifndef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// Generated from the TEXTINCLUDE 3 resource.
//


/////////////////////////////////////////////////////////////////////////////
#endif    // not APSTUDIO_INVOKED
